{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"8IA-DeepLearning-Aula1-Exercicio1","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"2YW2aLJoTcS-","colab_type":"code","colab":{}},"source":["class MP_Neuron:\n","\n","    # firing threshold for the neuron\n","    threshold = 0\n","\n","    # weights for the neuron\n","    w1 = 0\n","    w2 = 0\n","\n","    possible_w1_vals = [-1, 1]\n","    possible_w2_vals = [-1, 1]\n","    possible_thresh_vals = [-2, -1, 0, 1, 2]\n","\n","    def __init__(self, input_matrix):\n","\n","        '''\n","        Example input matrix for AND gate\n","        |   x1  |   x2  |   y   |\n","        |   -1  |   -1  |   0   |\n","        |   -1  |   +1  |   0   |\n","        |   +1  |   -1  |   0   |\n","        |   +1  |   +1  |   1   |\n","        '''   \n","\n","        self.input_matrix = input_matrix\n","\n","    \n","    def iterate_all_values(self):\n","\n","        for w1 in self.possible_w1_vals:\n","            self.w1 = w1\n","\n","            for w2 in self.possible_w2_vals:\n","                self.w2 = w2\n","\n","                for threshold in self.possible_thresh_vals:\n","                    self.threshold = threshold\n","\n","                    if self.check_combination():\n","                        return True\n","        \n","        return False\n","\n","\n","    def check_combination(self):\n","\n","        valid = True\n","        for (x1, x2, y) in self.input_matrix:\n","            \n","            if not self.compare_target(x1, x2, y):\n","                valid = False\n","        \n","        return valid\n","\n","\n","    def compare_target(self, x1, x2, target):\n","        \n","        if self.neuron_activate(x1, x2) == target:\n","            return True\n","        else:\n","            return False\n","    \n","    \n","    def neuron_activate(self, x1, x2):\n","        output = self.w1*x1 + self.w2*x2\n","\n","        if output >= self.threshold:\n","            return 1\n","        else:\n","            return 0"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"VryXAFpqTl0A","colab_type":"code","colab":{}},"source":["AND_Matrix = [\n","    [-1, -1, 0],\n","    [-1,  1, 0],\n","    [ 1, -1, 0],\n","    [ 1,  1, 1],\n","]\n","\n","OR_Matrix = [\n","    [-1, -1, 0],\n","    [-1,  1, 1],\n","    [ 1, -1, 1],\n","    [ 1,  1, 1],\n","]\n","\n","NAND_Matrix = [\n","    [-1, -1, 1],\n","    [-1,  1, 1],\n","    [ 1, -1, 1],\n","    [ 1,  1, 0],\n","]\n","\n","XOR_Matrix = [\n","    [-1, -1, 0],\n","    [-1,  1, 1],\n","    [ 1, -1, 1],\n","    [ 1,  1, 0],\n","]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"0Xi5QRVFTuF-","colab_type":"code","colab":{}},"source":["def neuron_calculate(mp):\n","    if mp.iterate_all_values():\n","        print(\"Weights are : {}, {}\".format(mp.w1, mp.w2))\n","        print(\"Threshold is {}\".format(mp.threshold))\n","    else:\n","        print(\"Not linearly separable.\")\n","    print()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"F3X9ttERTwSM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":272},"outputId":"84e90cf5-94cd-4e43-9010-02461345182e","executionInfo":{"status":"ok","timestamp":1573087661384,"user_tz":180,"elapsed":787,"user":{"displayName":"Duan Nunes Alves da Silva","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mDfouVJ_YzmdNjtxGrHIL2yKbfjANwHO8v8Y5mSyg=s64","userId":"04410361390824864667"}}},"source":["print(\"++ AND Gate ++\")\n","mp_AND = MP_Neuron(AND_Matrix)\n","neuron_calculate(mp_AND)\n","\n","print(\"++ OR Gate ++\")\n","mp_OR = MP_Neuron(OR_Matrix)\n","neuron_calculate(mp_OR)\n","\n","print(\"++ NAND Gate ++\")\n","mp_NAND = MP_Neuron(NAND_Matrix)\n","neuron_calculate(mp_NAND)\n","\n","print(\"++ XOR Gate ++\")\n","mp_XOR = MP_Neuron(XOR_Matrix)\n","neuron_calculate(mp_XOR)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["++ AND Gate ++\n","Weights are : 1, 1\n","Threshold is 1\n","\n","++ OR Gate ++\n","Weights are : 1, 1\n","Threshold is -1\n","\n","++ NAND Gate ++\n","Weights are : -1, -1\n","Threshold is -1\n","\n","++ XOR Gate ++\n","Not linearly separable.\n","\n"],"name":"stdout"}]}]}